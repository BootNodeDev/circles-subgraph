type Hub @entity {
  id: ID!               # The namehash of the name
  owner: Safe!
}

type Token @entity {
  id: ID!               # The namehash of the name
  owner: Safe!
}

type User @entity {
  id: ID!
  safe: Safe!
}

type Safe @entity {
  id: ID!
  owners: [User!]! @derivedFrom(field: "safe")
  trusts: [Trust!]! @derivedFrom(field: "from")
  isTrustedBy: [Trust!]! @derivedFrom(field: "to")
  balances: [Balance!]
}

type Balance @entity {
  id: ID!
  amount: BigInt
}

interface Event {
  id: ID!    # Concatenation of block number and log ID
}

type Signup implements Event @entity {
  id: ID!
  safe: String!
  token: String!
}

type Trust implements Event @entity {
  id: ID!
  from: Safe!
  to: Safe!
  limit: BigInt!
}

type ProxyCreation implements Event @entity {
  id: ID!
}